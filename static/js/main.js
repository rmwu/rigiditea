// Generated by CoffeeScript 1.12.5
(function() {
  var Edge, Graph, Node, d3Vars, drawGraph, graphVars, initGraph, redraw, test, vars;

  $(function() {
    initGraph();
    console.log("boba is yummy");
    return test();
  });

  vars = {
    chargeVal: -50,
    width: 600,
    height: 500,
    radius: 15,
    fill: "#000"
  };

  graphVars = {
    nodeS: null,
    linkS: null,
    nodeMD: null,
    linkMD: null,
    nodeMU: null
  };

  d3Vars = {
    svg: null,
    nodes: null,
    edges: null
  };

  initGraph = function() {
    return d3Vars.svg = d3.select("#graph").append("svg").attr("width", vars.width).attr("height", vars.height).attr("fill", "none");
  };

  redraw = function() {
    return "boba is yummy";
  };


  /*
  Constructor for Graph object
  Params:
      nodes: list of Node objects
      edges: list of Edge objects
   */

  Graph = (function() {
    function Graph(nodes1, edges1) {
      this.nodes = nodes1;
      this.edges = edges1;
    }

    return Graph;

  })();


  /*
  Constructor for Edge object
  Params:
      id: unique identifier
      source: source Node object
      target: target Node object
      attr: list is attributes
   */

  Edge = (function() {
    function Edge(id, source, target, attr) {
      this.id = id;
      this.source = source;
      this.target = target;
      this.attr = attr;
    }

    return Edge;

  })();


  /*
  Constructor for Node object
  Params:
      id: unique identifier
      x, y: locations
      attr: list of attributes
   */

  Node = (function() {
    function Node(id, x, y, attr) {
      this.id = id;
      this.x = x;
      this.y = y;
      this.attr = attr;
    }

    return Node;

  })();

  drawGraph = function(graph, svg) {
    var edges, nodes;
    edges = svg.selectAll("link").data(graph.edges).enter().append("line").attr("class", "edge").attr("x1", function(edge) {
      return edge.source.x;
    }).attr("y1", function(edge) {
      return edge.source.x;
    }).attr("x2", function(edge) {
      return edge.target.x;
    }).attr("y2", function(edge) {
      return edge.target.x;
    });
    nodes = svg.selectAll("node").data(graph.nodes).enter().append("circle").attr("class", "circle").attr("cx", function(node) {
      return node.x;
    }).attr("cy", function(node) {
      return node.y;
    }).attr("r", vars.radius).attr("fill", vars.fill);
    return console.log("k");
  };

  test = function() {
    var graph, i, n, node, nodes;
    nodes = [];
    for (n = i = 0; i <= 9; n = ++i) {
      node = new Node(n, n * 25, n * 25, 1);
      nodes.push(node);
    }
    graph = new Graph(nodes, []);
    return drawGraph(graph, d3Vars.svg);
  };

}).call(this);
